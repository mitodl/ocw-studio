# Generated by Django 4.2.15 on 2024-10-01 09:22

from django.db import migrations, models, transaction


def migrate_metadata_forward(apps, schema_editor):
    """
    Forward migration to modify metadata fields of WebsiteContent
    associated with external resources.
    """

    WebsiteContent = apps.get_model("websites", "WebsiteContent")

    # Get all external resources with an associated ExternalResourceState
    contents = WebsiteContent.objects.filter(
        type="external-resource", external_resource_state__isnull=False
    )

    with transaction.atomic():
        for content in contents:
            state = content.external_resource_state

            # Remove 'backup_url', 'is_broken' and 'backup_url_status_code'
            # fields from metadata
            content.metadata.pop("backup_url", None)
            content.metadata.pop("is_broken", None)
            content.metadata.pop("backup_url_status_code", None)

            # Add an empty 'wayback_url' field
            content.metadata["wayback_url"] = ""

            # Add status from ExternalResourceState
            content.metadata["status"] = state.status

            content.save(update_fields=["metadata"])


def migrate_metadata_backward(apps, schema_editor):
    """
    Backward migration to revert changes to the metadata fields of WebsiteContent.
    Note: This migration only restores the field names without
    preserving their original data values.
    """
    WebsiteContent = apps.get_model("websites", "WebsiteContent")

    # Get all external resources
    contents = WebsiteContent.objects.filter(type="external-resource")

    with transaction.atomic():
        for content in contents:
            # Revert metadata changes
            content.metadata.pop("wayback_url", None)
            content.metadata.pop("status", None)
            # Re-add empty backup_url and is_broken
            content.metadata["backup_url"] = ""
            content.metadata["is_broken"] = ""
            content.metadata["backup_url_status_code"] = None

            content.save(update_fields=["metadata"])


class Migration(migrations.Migration):
    dependencies = [
        ("external_resources", "0002_alter_externalresourcestate_status"),
        ("websites", "0056_add_hide_download_field"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="externalresourcestate",
            name="backup_url_response_code",
        ),
        migrations.RemoveField(
            model_name="externalresourcestate",
            name="is_backup_url_broken",
        ),
        migrations.RemoveField(
            model_name="externalresourcestate",
            name="is_external_url_broken",
        ),
        migrations.AddField(
            model_name="externalresourcestate",
            name="wayback_http_status",
            field=models.IntegerField(
                blank=True,
                default=None,
                help_text="HTTP status code received when accessing the last Wayback Machine snapshot.",  # noqa: E501
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="externalresourcestate",
            name="wayback_job_id",
            field=models.CharField(
                blank=True,
                help_text="Last Job ID returned by Wayback Machine API when submitting URL for snapshot.",  # noqa: E501
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="externalresourcestate",
            name="wayback_last_successful_submission",
            field=models.DateTimeField(
                blank=True,
                default=None,
                help_text="The last time when the URL was successfully submitted to the Wayback Machine.",  # noqa: E501
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="externalresourcestate",
            name="wayback_status",
            field=models.CharField(
                blank=True,
                choices=[
                    ("pending", "Pending"),
                    ("success", "Success"),
                    ("error", "Error"),
                ],
                default="",
                help_text="The status of the Wayback Machine snapshot taken from the last archiving job.",  # noqa: E501
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="externalresourcestate",
            name="wayback_status_ext",
            field=models.CharField(
                blank=True,
                help_text="Extended status of the last Wayback Machine snapshot for detailed error tracking.",  # noqa: E501
                max_length=128,
            ),
        ),
        migrations.AddField(
            model_name="externalresourcestate",
            name="wayback_url",
            field=models.URLField(
                blank=True,
                help_text="Last working Wayback Machine snapshot URL for the External Resource.",  # noqa: E501
            ),
        ),
        migrations.AlterField(
            model_name="externalresourcestate",
            name="status",
            field=models.CharField(
                choices=[
                    ("unchecked", "Unchecked or pending check"),
                    ("valid", "External Resource URL is valid"),
                    ("broken", "External Resource URL is broken"),
                    (
                        "check_failed",
                        "Last attempt to check the External Resource URL failed",
                    ),
                ],
                default="unchecked",
                help_text="Status of the external resource (valid, broken, etc.).",
                max_length=16,
            ),
        ),
        migrations.RunPython(migrate_metadata_forward, migrate_metadata_backward),
    ]

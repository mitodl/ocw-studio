---
resource_types:
  - name: http-resource
    type: docker-image
    source:
      repository: jgriff/http-resource
      tag: latest
  - name: s3-resource-iam
    type: docker-image
    source:
      repository: governmentpaas/s3-resource
      tag: latest
  - name: slack-alert
    type: docker-image
    source:
      repository: arbourd/concourse-slack-alert-resource
      tag: v0.15.0
resources:
  - name: webpack-json
    type: s3-resource-iam
    check_every: never
    source:
      bucket: ol-eng-artifacts
      versioned_file: ocw-hugo-themes/((ocw-hugo-themes-branch))/webpack.json
  - name: course-markdown
    type: git
    check_every: never
    source:
      uri: ((markdown-uri))((git-private-key-var))
      branch: ((ocw-site-repo-branch))
  - name: ocw-hugo-themes
    type: git
    check_every: never
    source:
      uri: ((ocw-hugo-themes-uri))
      branch: ((ocw-hugo-themes-branch))
  - name: ocw-hugo-projects
    type: git
    check_every: never
    source:
      uri: ((ocw-hugo-projects-uri))
      branch: ((ocw-hugo-projects-branch))
  - name: ocw-studio-webhook
    type: http-resource
    check_every: never
    source:
        url: ((ocw-studio-url))/api/websites/((site-name))/pipeline_status/
        method: POST
        headers:
            Content-Type: "application/json"
            Authorization: "Bearer ((api-token))"
        out_only: true
  - name: open-discussions-webhook
    type: http-resource
    check_every: never
    source:
        url: ((open-discussions-url))/api/v0/ocw_next_webhook/
        method: POST
        headers:
          Content-Type: "application/json"
        out_only: true
  - name: slack-webhook
    type: slack-alert
    check_every: never
    source:
      url: ((slack-url))
      disabled: false
jobs:
  - name: build-ocw-site
    serial: true
    plan:
      - try:
          put: ocw-studio-webhook
          timeout: 1m
          attempts: 3
          params:
            text: |
              {
                "version": "((pipeline_name))",
                "status": "started"
              }
      - get: webpack-json
        trigger: false
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on get webpack-json : ((pipeline_name))/((site-name))"
      - get: ocw-hugo-themes
        trigger: false
        timeout: 5m
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get ocw-hugo-themes : ((pipeline_name))/((site-name))"
      - get: ocw-hugo-projects
        trigger: false
        timeout: 5m
        attempts: 3
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get ocw-hugo-projects : ((pipeline_name))/((site-name))"
      - get: course-markdown
        trigger: false
        timeout: 5m
        attempts: 3
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get course-markdown : ((pipeline_name))/((site-name))"
      - task: build-course-task
        timeout: 20m
        attempts: 3
        params:
          API_BEARER_TOKEN: ((api-token))
          GTM_ACCOUNT_ID: ((gtm-account-id))
          OCW_STUDIO_BASE_URL: ((ocw-studio-url))
          STATIC_API_BASE_URL: ((static-api-base-url))
          OCW_IMPORT_STARTER_SLUG: ((ocw-import-starter-slug))
          SITEMAP_DOMAIN: ((sitemap-domain))
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: mitodl/ocw-course-publisher, tag: 0.2}
          inputs:
            - name: ocw-hugo-themes
            - name: course-markdown
            - name: ocw-hugo-projects
            - name: webpack-json
          outputs:
            - name: course-markdown
            - name: ocw-hugo-themes
          run:
            dir: course-markdown
            path: sh
            args:
            - -exc
            - |
              cp ../webpack-json/webpack.json ../ocw-hugo-themes/base-theme/data
              hugo --config ../ocw-hugo-projects/((config-slug))/config.yaml --baseUrl /((base-url)) --themesDir ../ocw-hugo-themes/ ((build-drafts))
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on build-course-task : ((pipeline_name))/((site-name))"
      - task: copy-s3-buckets
        timeout: 20m
        attempts: 3
        config:
          inputs:
            - name: course-markdown
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: amazon/aws-cli, tag: latest}
          run:
            path: sh
            args:
            - -exc
            - |
              aws s3 sync s3://((ocw-studio-bucket))/((s3-path)) s3://((ocw-bucket))/((site-url)) --metadata site-id=((site-name))              
              aws s3 sync course-markdown/public s3://((ocw-bucket))/((base-url)) --metadata site-id=((site-name))
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on copy-s3-buckets : ((pipeline_name))/((site-name))"
      - task: clear-cdn-cache
        timeout: 5m
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: curlimages/curl}
          run:
            path: curl
            args:
              - -f
              - -X
              - POST
              - -H
              - 'Fastly-Key: ((fastly.api_token))'((purge_header))
              - https://api.fastly.com/service/((fastly.service_id))/((purge-url))
        on_success:
          try:
            do:
              - put: open-discussions-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "webhook_key": "((open-webhook-key))",
                      "prefix": "((site-url))/",
                      "version": "((pipeline_name))"
                    }
              - put: ocw-studio-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "succeeded"
                    }
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on clear-cdn-cache : ((pipeline_name))/((site-name))"

---
resource_types:
  - name: http-api
    type: docker-image
    source:
      repository: aequitas/http-api-resource
      tag: latest
resources:
  - name: ocw-hugo-themes
    type: s3
    source:
      bucket: ol-eng-artifacts
      regexp: ocw-hugo-themes/release/ocw-hugo-themes-(.*).tgz
  - name: course-markdown
    type: git
    source:
      uri: git@((git-domain)):((github-org))/((ocw-site-repo)).git
      branch: ((ocw-site-repo-branch))
      private_key: ((git-private-key))
  - name: ocw-hugo-projects
    type: git
    source:
      uri: ((ocw-hugo-projects-uri))
      branch: ((ocw-hugo-projects-branch))
  - name: ocw-studio-webhook
    type: http-api
    source:
        uri: ((ocw-studio-url))/api/websites/((site-name))/pipeline_complete/
        method: POST
        headers:
            Authorization: "Bearer {bearer_token}"
        json:
            version: ((version))
            site: ((base-url))
            success: "{succeeded}"
        bearer_token: ((api-token))
jobs:
  - name: build-ocw-site
    serial: true
    plan:
      - get: ocw-hugo-themes
        trigger: true
      - get: ocw-hugo-projects
        trigger: true
      - get: course-markdown
        trigger: true
      - task: build-course-task
        params:
          OCW_STUDIO_BASE_URL: ((ocw-studio-url))
          STATIC_API_BASE_URL: ((static-api-base-url))
          OCW_IMPORT_STARTER_SLUG: ((ocw-import-starter-slug))
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: mitodl/ocw-course-publisher, tag: latest}
          inputs:
            - name: ocw-hugo-themes
            - name: course-markdown
            - name: ocw-hugo-projects
          outputs:
            - name: ocw-studio-hook
            - name: course-markdown
            - name: ocw-hugo-themes
          run:
            dir: course-markdown
            path: sh
            args:
            - -exc
            - |
              mkdir ../ocw-hugo-themes/theme
              tar -xvzf ../ocw-hugo-themes/ocw-hugo-themes-*.tgz -C ../ocw-hugo-themes/theme
              hugo --config ../ocw-hugo-projects/((config-slug))/config.yaml --baseUrl /((base-url)) --themesDir ../ocw-hugo-themes/theme
        on_failure:
          try:
            put: ocw-studio-webhook
            params:
                succeeded: false
      - task: copy-s3-buckets
        config:
          inputs:
            - name: ocw-hugo-themes
            - name: course-markdown
          outputs:
            - name: ocw-studio-webhook
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: amazon/aws-cli, tag: latest}
          run:
            path: sh
            args:
            - -exc
            - |
              aws s3 sync course-markdown/public s3://((ocw-bucket))/((base-url))
              aws s3 sync s3://((ocw-studio-bucket))/((site-url)) s3://((ocw-bucket))/((site-url))
              if [[ "((base-url))" == "" ]]; then aws s3 sync ocw-hugo-themes/theme/base-theme/dist s3://((ocw-bucket)); fi
        on_failure:
          try:
            put: ocw-studio-webhook
            params:
                succeeded: false
      - task: clear-cdn-cache
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: curlimages/curl}
          run:
            path: curl
            args:
              - -f
              - -X
              - POST
              - -H
              - 'Fastly-Key: ((fastly.api_token))'
              - -H
              - 'Fastly-Soft-Purge: 1'
              - https://api.fastly.com/service/((fastly.service_id))/((purge-url))
        on_success:
          try:
            put: ocw-studio-webhook
            params:
                succeeded: true
        on_failure:
          try:
            put: ocw-studio-webhook
            params:
                succeeded: false

---
resource_types:
  - name: http-resource
    type: registry-image
    source:
      repository: jgriff/http-resource
      tag: latest
  - name: keyval
    type: registry-image
    source:
      repository: ghcr.io/cludden/concourse-keyval-resource
  - name: s3-resource-iam
    type: registry-image
    source:
      repository: governmentpaas/s3-resource
      tag: latest
  # START NON-DEV
  - name: slack-alert
    type: registry-image
    source:
      repository: arbourd/concourse-slack-alert-resource
      tag: v0.15.0
  # END NON-DEV
resources:
  - name: webpack-json
    type: s3-resource-iam
    check_every: never
    source:
      # START DEV-ONLY
      endpoint: ((endpoint-url))
      access_key_id: ((minio-root-user))
      secret_access_Key: ((minio-root-password))
      # END DEV-ONLY
      bucket: ((artifacts-bucket))
      versioned_file: ocw-hugo-themes/((ocw-hugo-themes-branch))/webpack.json
  - name: offline-build-gate
    type: keyval
    check_every: never
  - name: course-markdown
    type: git
    check_every: never
    source:
      uri: ((markdown-uri))((git-private-key-var))
      branch: ((ocw-site-repo-branch))
  - name: ocw-hugo-themes
    type: git
    check_every: never
    source:
      uri: ((ocw-hugo-themes-uri))
      branch: ((ocw-hugo-themes-branch))
  - name: ocw-hugo-projects
    type: git
    check_every: never
    source:
      uri: ((ocw-hugo-projects-uri))
      branch: ((ocw-hugo-projects-branch))
  - name: ocw-studio-webhook
    type: http-resource
    check_every: never
    source:
        url: ((ocw-studio-url))/api/websites/((site-name))/pipeline_status/
        method: POST
        headers:
            Content-Type: "application/json"
            Authorization: "Bearer ((api-token))"
        out_only: true
  # START NON-DEV
  - name: open-discussions-webhook
    type: http-resource
    check_every: never
    source:
        url: ((open-discussions-url))/api/v0/ocw_next_webhook/
        method: POST
        headers:
          Content-Type: "application/json"
        out_only: true
  - name: slack-webhook
    type: slack-alert
    check_every: never
    source:
      url: ((slack-url))
      disabled: false
  # END NON-DEV
jobs:
  - name: build-online-ocw-site
    serial: true
    plan:
      - try:
          put: ocw-studio-webhook
          timeout: 1m
          attempts: 3
          params:
            text: |
              {
                "version": "((pipeline_name))",
                "status": "started"
              }
      - get: webpack-json
        trigger: false
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on get webpack-json : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting webpack-json : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting webpack-json : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: ocw-hugo-themes
        trigger: false
        timeout: 5m
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get ocw-hugo-themes : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting ocw-hugo-themes : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting ocw-hugo-themes : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: ocw-hugo-projects
        trigger: false
        timeout: 5m
        attempts: 3
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get ocw-hugo-projects : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting ocw-hugo-projects : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting ocw-hugo-projects : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: course-markdown
        trigger: false
        timeout: 5m
        attempts: 3
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get course-markdown : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting course-markdown : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting course-markdown : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - task: static-resources
        timeout: 40m
        attempts: 3
        # START DEV-ONLY
        params:
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
        # END DEV-ONLY
        config:
          outputs:
            - name: static-resources
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: amazon/aws-cli, tag: latest}
          run:
            path: sh
            args:
            - -exc
            - aws s3((cli-endpoint-url)) sync s3://((ocw-studio-bucket))/((s3-path)) ./static-resources
      - task: build-course-online
        timeout: 20m
        attempts: 3
        params:
          API_BEARER_TOKEN: ((api-token))
          GTM_ACCOUNT_ID: ((gtm-account-id))
          OCW_STUDIO_BASE_URL: ((ocw-studio-url))
          STATIC_API_BASE_URL: ((static-api-base-url))
          OCW_IMPORT_STARTER_SLUG: ((ocw-import-starter-slug))
          OCW_COURSE_STARTER_SLUG: ((ocw-course-starter-slug))
          SITEMAP_DOMAIN: ((sitemap-domain))
          SENTRY_DSN: ((ocw-hugo-themes-sentry-dsn))
          NOINDEX: ((noindex))
          # START DEV-ONLY
          RESOURCE_BASE_URL: ((resource-base-url))
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
          # END DEV-ONLY
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: mitodl/ocw-course-publisher, tag: 0.6}
          inputs:
            - name: ocw-hugo-themes
            - name: ocw-hugo-projects
            - name: course-markdown
            - name: static-resources
            - name: webpack-json
          outputs:
            - name: course-markdown
            - name: ocw-hugo-themes
          run:
            dir: course-markdown
            path: sh
            args:
            - -exc
            - |
              cp ../webpack-json/webpack.json ../ocw-hugo-themes/base-theme/data
              hugo ((hugo-args-online))
              cp -r -n ../static-resources/. ./output-online((static-resources-subdirectory))
              rm -rf ./output-online((static-resources-subdirectory))*.mp4
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on build-course-online : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error during build-course-online : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted during build-course-online : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - task: upload-online-build
        timeout: 40m
        attempts: 3
        params:
          IS_ROOT_WEBSITE: ((is-root-website))
          # START DEV-ONLY
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
          # END DEV-ONLY
        config:
          inputs:
            - name: course-markdown
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: amazon/aws-cli, tag: latest}
          run:
            path: sh
            args:
            - -exc
            - |
              if [ "$IS_ROOT_WEBSITE" = true ];
              then
                aws s3((cli-endpoint-url)) sync course-markdown/output-online s3://((web-bucket))/((base-url)) --metadata site-id=((site-name))((delete))
              else
                aws s3((cli-endpoint-url)) sync course-markdown/output-online s3://((web-bucket))/((base-url)) --exclude='((short-id)).zip' --exclude='((short-id))-video.zip' --metadata site-id=((site-name))((delete))
              fi
        # START DEV-ONLY
        on_success:
          try:
            do:
              - put: ocw-studio-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "succeeded"
                    }
        # END DEV-ONLY
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on copy-s3-buckets : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error during copy-s3-buckets : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted during copy-s3-buckets : ((pipeline_name))/((site-name))"
            # END NON-DEV
      # START NON-DEV
      - task: clear-cdn-cache
        timeout: 5m
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: curlimages/curl}
          run:
            path: curl
            args:
              - -f
              - -X
              - POST
              - -H
              - 'Fastly-Key: ((fastly.api_token))'((purge_header))
              - https://api.fastly.com/service/((fastly.service_id))/((purge-url))
        on_success:
          try:
            do:
              - put: open-discussions-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "webhook_key": "((open-webhook-key))",
                      "prefix": "((site-url))/",
                      "version": "((pipeline_name))"
                    }
              - put: ocw-studio-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "succeeded"
                    }
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on clear-cdn-cache : ((pipeline_name))/((site-name))"
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error during clear-cdn-cache : ((pipeline_name))/((site-name))"
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted during clear-cdn-cache : ((pipeline_name))/((site-name))"
      # END NON-DEV
      - put: offline-build-gate
        params:
          mapping: |
            timestamp = now()
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on put offline-build-gate : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while putting offline-build-gate : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while putting offline-build-gate : ((pipeline_name))/((site-name))"
            # END NON-DEV
  - name: build-offline-ocw-site
    serial: true
    plan:
      - get: offline-build-gate
        passed: [build-online-ocw-site]
        trigger: true
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on get offline-build-gate : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting offline-build-gate : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting offline-build-gate : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: webpack-json
        passed: [build-online-ocw-site]
        trigger: false
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on get webpack-json : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting webpack-json : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting webpack-json : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: ocw-hugo-themes
        passed: [build-online-ocw-site]
        trigger: false
        timeout: 5m
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get ocw-hugo-themes : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting ocw-hugo-themes : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting ocw-hugo-themes : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: ocw-hugo-projects
        passed: [build-online-ocw-site]
        trigger: false
        timeout: 5m
        attempts: 3
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get ocw-hugo-projects : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting ocw-hugo-projects : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting ocw-hugo-projects : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - get: course-markdown
        passed: [build-online-ocw-site]
        trigger: false
        timeout: 5m
        attempts: 3
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed to get course-markdown : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error while getting course-markdown : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted while getting course-markdown : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - task: static-resources
        timeout: 40m
        attempts: 3
        # START DEV-ONLY
        params:
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
        # END DEV-ONLY
        config:
          outputs:
            - name: static-resources
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: amazon/aws-cli, tag: latest}
          run:
            path: sh
            args:
            - -exc
            - aws s3((cli-endpoint-url)) sync s3://((ocw-studio-bucket))/((s3-path)) ./static-resources
      - task: filter-webpack-artifacts
        timeout: 10m
        attempts: 3
        params:
        # START DEV-ONLY
          RESOURCE_BASE_URL: ((resource-base-url))
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
        # END DEV-ONLY
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: mitodl/ocw-course-publisher, tag: 0.6}
          inputs:
            - name: webpack-json
          outputs:
            - name: build-artifacts
          run:
            path: sh
            args:
            - -exc
            - |
              jq 'recurse | select(type=="string")' ./webpack-json/webpack.json | tr -d '"' | xargs -I {} aws s3((cli-endpoint-url)) cp s3://((web-bucket)){} ./build-artifacts/{} --exclude *.js.map
      - task: build-course-offline
        timeout: 90m
        attempts: 3
        params:
          API_BEARER_TOKEN: ((api-token))
          GTM_ACCOUNT_ID: ((gtm-account-id))
          OCW_STUDIO_BASE_URL: ((ocw-studio-url))
          STATIC_API_BASE_URL: ((static-api-base-url))
          OCW_IMPORT_STARTER_SLUG: ((ocw-import-starter-slug))
          OCW_COURSE_STARTER_SLUG: ((ocw-course-starter-slug))
          SITEMAP_DOMAIN: ((sitemap-domain))
          SENTRY_DSN: ((ocw-hugo-themes-sentry-dsn))
          NOINDEX: ((noindex))
          IS_ROOT_WEBSITE: ((is-root-website))
          # START DEV-ONLY
          RESOURCE_BASE_URL: ((resource-base-url))
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
          # END DEV-ONLY
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: mitodl/ocw-course-publisher, tag: 0.6}
          inputs:
            - name: ocw-hugo-themes
            - name: ocw-hugo-projects
            - name: course-markdown
            - name: static-resources
            - name: webpack-json
            - name: build-artifacts
          outputs:
            - name: course-markdown
            - name: ocw-hugo-themes
            - name: build-course-offline
          run:
            dir: course-markdown
            path: sh
            args:
            - -exc
            - |
              if [ -f "../ocw-hugo-projects/((config-slug))/config-offline.yaml" ];
              then
                cp ../webpack-json/webpack.json ../ocw-hugo-themes/base-theme/data
                mkdir -p ./content/static_resources
                mkdir -p ./static/static_resources
                mkdir -p ./static/static_shared
                mkdir -p ../videos
                cp -r ../static-resources/. ./content/static_resources
                HTML_COUNT="$(ls -1 ./content/static_resources/*.html 2>/dev/null | wc -l)"
                if [ $HTML_COUNT != 0 ];
                then
                  mv ./content/static_resources/*.html ./static/static_resources
                fi
                MP4_COUNT="$(ls -1 ./content/static_resources/*.mp4 2>/dev/null | wc -l)"
                if [ $MP4_COUNT != 0 ];
                then
                  mv ./content/static_resources/*.mp4 ../videos
                fi
                touch ./content/static_resources/_index.md
                cp -r ../build-artifacts/static_shared/. ./static/static_shared/
                hugo ((hugo-args-offline))
                if [ "$IS_ROOT_WEBSITE" = false ];
                then
                  cd output-offline
                  zip -r ../../build-course-offline/((short-id)).zip ./
                  rm -rf ./*
                  cd ..
                  if [ $MP4_COUNT != 0 ];
                  then
                    mv ../videos/* ./content/static_resources
                  fi
                  hugo ((hugo-args-offline))
                  cd output-offline
                  zip -r ../../build-course-offline/((short-id))-video.zip ./
                fi
              else
                echo "Offline configuration not found for site type ((config-slug))"
              fi
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on build-course-task : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error during build-course-task : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted during build-course-task : ((pipeline_name))/((site-name))"
            # END NON-DEV
      - task: upload-offline-build
        timeout: 40m
        attempts: 3
        params:
          IS_ROOT_WEBSITE: ((is-root-website))
          # START DEV-ONLY
          AWS_ACCESS_KEY_ID: ((minio-root-user))
          AWS_SECRET_ACCESS_KEY: ((minio-root-password))
          # END DEV-ONLY
        config:
          inputs:
            - name: course-markdown
            - name: build-course-offline
            - name: ocw-hugo-projects
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: amazon/aws-cli, tag: latest}
          run:
            path: sh
            args:
            - -exc
            - |
              if [ -f "ocw-hugo-projects/((config-slug))/config-offline.yaml" ];
              then
                aws s3((cli-endpoint-url)) sync course-markdown/output-offline/ s3://((offline-bucket))/((base-url)) --metadata site-id=((site-name))((delete))
                if [ "$IS_ROOT_WEBSITE" = false ];
                then
                  aws s3((cli-endpoint-url)) sync build-course-offline/ s3://((web-bucket))/((base-url)) --exclude='*' --include='((short-id)).zip' --metadata site-id=((site-name))
                  aws s3((cli-endpoint-url)) sync build-course-offline/ s3://((web-bucket))/((base-url)) --exclude='*' --include='((short-id))-video.zip' --metadata site-id=((site-name))
                fi
              else
                echo "Offline configuration not found for site type ((config-slug))"
              fi
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on upload-offline-build : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error during upload-offline-build : ((pipeline_name))/((site-name))"
            # END NON-DEV
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            # START NON-DEV
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted during upload-offline-build : ((pipeline_name))/((site-name))"
            # END NON-DEV
      # START NON-DEV
      - task: clear-cdn-cache
        timeout: 5m
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: curlimages/curl}
          run:
            path: curl
            args:
              - -f
              - -X
              - POST
              - -H
              - 'Fastly-Key: ((fastly.api_token))'((purge_header))
              - https://api.fastly.com/service/((fastly.service_id))/((purge-url))
        on_success:
          try:
            do:
              - put: open-discussions-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "webhook_key": "((open-webhook-key))",
                      "prefix": "((site-url))/",
                      "version": "((pipeline_name))"
                    }
              - put: ocw-studio-webhook
                timeout: 1m
                attempts: 3
                params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "succeeded"
                    }
        on_failure:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: failed
                text: "Failed on clear-cdn-cache : ((pipeline_name))/((site-name))"
        on_error:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "errored"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: errored
                text: "Concourse System Error during clear-cdn-cache : ((pipeline_name))/((site-name))"
        on_abort:
          try:
            do:
            - put: ocw-studio-webhook
              timeout: 1m
              attempts: 3
              params:
                  text: |
                    {
                      "version": "((pipeline_name))",
                      "status": "aborted"
                    }
            - put: slack-webhook
              timeout: 1m
              params:
                alert_type: aborted
                text: "User Aborted during clear-cdn-cache : ((pipeline_name))/((site-name))"
      # END NON-DEV
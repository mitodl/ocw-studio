[tool.black]
py38 = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
  | s3
)/
'''

[tool.isort]
multi_line_output = 3
combine_as_imports = true
force_grid_wrap = false
include_trailing_comma = true

lines_after_imports = 2
line_length = 88

extra_standard_library = "dataclasses,typing_extensions"

[tool.poetry]
name = "ocw-studio"
description = "OCW Studio manages deployments for OCW courses"
authors = ["MITODL"]
license = "BSD-3"
readme = "README.md"
version = "0.0.0"

[tool.poetry.dependencies]
python = "3.10.12"
beautifulsoup4 = "^4.12.2"
django = "3.2.19"
boto3 = "1.26.153"
celery = "^5.3.0"
ol-concoursepy = "0.0.41"
cryptography = "^41.0.3"
dj-database-url = "2.0.0"
django-anymail = {version = "10.0", extras = ["mailgun"]}
django-bulk-update-or-create = "0.3.0"
django-guardian = "2.4.0"
django-hijack = "3.4.1"
django-redis = "5.0.0"
djangorestframework = "3.14.0"
django-robots = "6.0b0"
django-safedelete = "1.3.2"
django-storages = "1.13.2"
django-webpack-loader = "1.4.1"
google-api-python-client = "^2.58.0"
google-auth = "^2.11.0"
google-auth-oauthlib = "^1.0.0"
mitol-django-authentication = "^2023.1.17"
mitol-django-common = "^2023.6.27.1"
mitol-django-mail = "^2023.1.17"
drf-extensions = "^0.7.1"
ipython = "^8.14.0"
newrelic = "^8.8.1"
psycopg2 = "^2.9.6"
pygithub = "1.58.2"
pypdf2 = "^3.0.1"
python-magic = "^0.4.27"
redis = "^4.5.5"
requests = "2.31.0"
sentry-sdk = "1.27.0"
smart-open = {extras = ["s3"], version = "^6.3.0"}
social-auth-core = {version = "^4", extras = ["saml"]}
social-auth-app-django = "^4"
uwsgi = "^2.0.21"
pyyaml = "^6.0.1"
tqdm = "^4.65.0"
yamale = "4.0.4"
django-model-utils = "4.2.0"
ol-concourse = "^0.5.3"
uwsgitop = "^0.11"
more-itertools = "^10.1.0"

[tool.poetry.group.dev.dependencies]
black = "22.6.0"
bpython = "^0.24"
ddt = "^1.6.0"
django-debug-toolbar = "^4.1.0"
factory-boy = "^3.3.0"
faker = "^19.1.0"
ipdb = "^0.13.13"
moto = "^4.1.13"
nplusone = "^1.0.0"
pdbpp = "^0.10.3"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-env = "0.8.2"
pytest-mock = "^3.11.1"
ruff = "^0.0.286"
semantic-version = "^2.10.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "A",  # flake8-builtins
    # "AIR",  # Airflow
    # "ANN",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    # "ASYNC",  # flake8-async
    "B",  # flake8-bugbear
    "BLE",  # flake8-blind-except
    "C4",  # flake8-comprehensions
    "C90",  # mccabe
    # "COM",  # flake8-commas
    "CPY",  # flake8-copyright
    "D",  # pydocstyle
    "DJ",  # flake8-django
    "DTZ",  # flake8-datetimez
    "E",  # Pycodestyle Error
    "EM",  # flake8-errmsg
    "ERA",  # eradicate
    "EXE",  # flake8-executable
    "F",  # Pyflakes
    "FA",  # flake8-future-annotations
    "FBT",  # flake8-boolean-trap
    "FIX",  # flake8-fixme
    "FLY",  # flynt
    # "FURB",  # refurb
    "G",  # flake8-logging-format
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "INT",  # flake8-gettext
    "ISC",  # flake8-implicit-str-concat
    "N",  # pep8-naming
    # "NPY",  # NumPy-specific rules
    # "PD",  # pandas-vet
    "PERF",  # Perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # Pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TCH",  # flake8-type-checking
    "TD",  # flake8-todos
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Pycodestyle Warning
    "YTT",  # flake8-2020
]
ignore = [
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "N803",
    "N806",
    "N999",
    "PIE804",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "RUF012",
    "UP007"
]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.per-file-ignores]
"*_test.py" = ["ARG001", "E501", "S101", "PLR2004"]
"test_*.py" = ["ARG001", "E501", "S101", "PLR2004"]
"**/migrations/**" = ["ARG001"]

# Generated by Django 3.1.12 on 2021-07-20 19:38

import contextlib

from django.db import migrations, models

from ocw_import.api import get_short_id
from websites.api import find_available_name


def backpopulate_short_id(apps, schema_editor):
    """Backpopulate short_id field"""
    Website = apps.get_model("websites", "Website")
    ContentSyncState = apps.get_model("content_sync", "ContentSyncState")
    website_qset = Website.objects.values("uuid", "name", "metadata")
    for website_dict in website_qset:
        short_id = None
        if website_dict["metadata"]:
            with contextlib.suppress(Exception):
                short_id = get_short_id(website_dict["name"], website_dict["metadata"])

        if not short_id:
            short_id = website_dict["name"][:100]
            short_id_exists = Website.objects.filter(short_id=short_id).exists()
            if short_id_exists:
                short_id = find_available_name(
                    Website.objects.iterator(), short_id, "short_id", max_length=100
                )
        Website.objects.filter(uuid=website_dict["uuid"]).update(short_id=short_id)
    # Start from scratch with content sync
    ContentSyncState.objects.update(synced_checksum=None)


class Migration(migrations.Migration):
    dependencies = [
        ("websites", "0030_blank_filename_dirpath"),
    ]

    operations = [
        migrations.AddField(
            model_name="website",
            name="short_id",
            field=models.CharField(db_index=True, max_length=100, null=True),
        ),
        migrations.RunPython(backpopulate_short_id, migrations.RunPython.noop),
    ]
